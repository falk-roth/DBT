#Netzwerk SMart Produktion - Projekt DBT1 Team NSP
#Versiom 1.1
#15.12.2023

# This file is executed on every boot (including wake-boot from deepsleep)

#--------------------Libraries importieren-----------------------------------------

import machine 
import network
import time
import ubinascii
from machine import I2C, Pin
import sh1107
import bme680
from bme680 import *
import framebuf
import requests
from umqtt.simple import MQTTClient   


#--------------------Konfiguration WLan und MQTT Broker------------------------------------------------------------------------------------

WLAN_SSID = ""
WLAN_PW = ""

MQTT_BROKER = ""
MQTT_USERNAME = ""
MQTT_PW = ""
MQTT_TOPIC = "NSP_Test"


#--------------------OLED-Display initialisieren-------------------------------------------------------------------------------------------


i2c_oled = I2C(0, scl=Pin(22), sda=Pin(21))
oled = sh1107.SH1107_I2C(128, 128, i2c_oled, address = 0x3c, rotate=0)

oled.sleep(False)
oled.fill(0)

#--------------------Sensor initialisieren-----------------------------------------------------------------------------------------------

i2c_BME = I2C(0,scl=Pin(22), sda=Pin(21))
sensor = BME680_I2C(i2c=i2c_BME, address = 0x77)

#--------------------Network Smart Production Boot-Animation------------------------------------------------------------------------------

buffer = bytearray(b'\x00\x1f\x1f\x7f\xe7\xff\x7f\xef\xdf\x7f\xff\x9f\xf0\xfc\xf8\x00\x00\x1f\x9f\x7f\xe7\xff\x7f\xef\xdf\x7f\xff\x9f\xfc\xfc\xf8\x00\x00\x1f\x9f\x7f\xe7\xff\x7f\xef\xdf\x7f\xff\x9f\xfc\xfc\xf8\x00\x00\x0f\xcc<f\xf3c\xe7\x8e9\xf3\x9f>|\xf0\x00\x00\x0f\xee<\x06\xf7\x0f\xc3\xdfy\xf0\x1f<}\xc0\x00\x00\r\xee?\x00\xf0\x1f\x83\xdfq\xfc\x1f\xfc{\xc0\x00\x00\r\xfe?\x00\xf0\x1f\x03\xdfq\xfc\x1f\xf8\x7f\xe0\x00\x00\x0e\xfc<\x00\xf0>c\xff\xe1\xf0\x1f<}\xf0\x00\x00\x0e|<`\xf0~a\xff\xe1\xf3\x9f<x\xf8\x00\x00\x1e<\x7f\xe1\xf8\x7f\xe1\xf7\xc1\xff\x9f\x1e\xfd\xf8\x00\x00\x1e<\x7f\xe1\xf8\x7f\xe1\xf3\xc1\xff\x9f\x1e\xfd\xf8\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7f?\x1f\xc7\xf8\xff\x87\xff\x00\x00\x00\x00\x00\x00\x00\x00\xff?\x9f\xc7\xf8\xff\xe7\xff\x00\x00\x00\x00\x00\x00\x00\x00\xe7?\x9f\xc7\xf8\xff\xf7\xff\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\xff\x83\xf0x\xf7{\x00\x00\x00\x00\x00\x00\x00\x00\xf8;\xf7\x87xy\xf7{\x00\x00\x00\x00\x00\x00\x00\x00\xfe;\xf7\x86x\x7f\xe0x\x00\x00\x00\x00\x00\x00\x00\x00?\x19\xf7\x8f\xf8\x7f\xe0\xf8\x00\x00\x00\x00\x00\x00\x00\x00\x0f\x19\xe7\x8c8y\xe0\xf8\x00\x00\x00\x00\x00\x00\x00\x00\xc7\x19\xe7\x8c<y\xf0\xf8\x00\x00\x00\x00\x00\x00\x00\x00\xff<\xef\xde~\xf8\xf0\xfc\x00\x00\x00\x00\x00\x00\x00\x00\xfe|\xcf\xde~\xfc\xf0\xfc\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7f\xe3\xff\x81\xf8?\xe0\xff\xe1\xf6\xff\xe7\xe1\xfc?>\x7f\xfb\xff\xc7\xfe?\xf8\xfd\xe7\xfe\x7f\xe7\xe3\xfe?\xbe<y\xe3\xc7\x9f\x1e|y\xc7\x8eo#\xc7\xdf\x1f\x9c<y\xe3\xc7\x8f\x1e>y\xcf\x8eo#\xc7\x8f\x9f\xdc?\xf9\xff\xcf\x8f\x1e>y\xcf\x80\x0f\x03\xcf\x8f\x9b\xdc?\xf1\xff\x8f\x8f\x1f>y\xcf\x80\x0f\x03\xcf\x8f\x99\xfc>\x01\xe7\xcf\x8f\x1f>y\xcf\x86\x0f\x03\xc7\x8f\x99\xfc<\x01\xe7\xc7\x8f\x1f|y\xc7\x8e\x0f\x03\xc7\xcf\x18\xfc~\x03\xf3\xe7\xfe?\xfc\x7f\xc7\xfe\x1f\x87\xe3\xfe<|~\x03\xf3\xe3\xfc?\xf8?\x83\xfc\x1f\x87\xe1\xfc<|~\x03\xf1\xe0p?\xc0\x1e\x00\xf0\x1f\x87\xe0p<<\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00')
fb = framebuf.FrameBuffer(buffer, 128, 65, framebuf.MONO_HLSB)

oled.blit(fb, 0, 30)
oled.show()
time.sleep(4)
oled.fill(0)

#--------------------WLan Verbindung wird hergestellt (SSID und Passwort weiter oben definiert)-------------------------------------------

station = network.WLAN(network.STA_IF)
station.active(True) 
wlan_mac = station.config('mac')
print("WLAN MAC Adress: " + ubinascii.hexlify(wlan_mac).decode())

station.connect(WLAN_SSID, WLAN_PW)
print("Connecting ...")
oled.text("Connecting...", 0, 60, 1)
oled.show()

while not station.isconnected():
    print(".")
    time.sleep(1)
    
print("Connected, my IP is " + str(station.ifconfig()[0]))

#Status auf Oled anzeigen(WLAN)
oled.fill(0)
oled.text("WLAN verbunden",0, 60, 1)
oled.show()
time.sleep(2)

#IP auf Oled anzeigen(WLAN)
oled.fill(0)
oled.text("IP", 50, 50, 1)
oled.text(str(station.ifconfig()[0]), 0, 70, 1)
oled.show()
time.sleep(5)


#--------------------Eindeutige Device ID definiert, Konfiguration wird von der Verwaltungschale abgefragt -----------------------------------------

device_ID = "PCB1"
url_config = "http://twinserver.smartproduction.de:28443/aasServer/shells/aas-demonstrator.smartproduction.de:aas:"+ device_ID + "/aas/submodels/TechnicalData/submodel/submodelElements/TechnicalProperties/SoftwareConfig/value/"

def get_configuration():
    try:
        response = requests.get(url_config)
        if response.status_code == 200:
            configuration = response.json()
            return configuration
        else:
            print("Kein gÃ¼ltiger ID-Wert.")

    except Exception as e: #Ausnahmen, z.B Netzwerkfehler werden abgefangen.
        print(f"Fehler beim Auslesen der Konfiguration: {str(e)}") 
        oled.sleep(False)
        oled.fill(0)
        oled.text ("Fehler beim", 0, 30, 1)
        oled.text ("Auslesen der", 0, 50, 1)
        oled.text ("Konfiguration:", 0, 70, 1)
        oled.text ("Bitte neu starten:", 0, 90, 1)
        oled.show ()
        
get_configuration()
configuration = get_configuration()


#--------------------MQTT-Verbindung wird aufgebaut + Status auf OLED angezeigt (entsprechend der Konfiguration)----------------------------------------

if str(configuration)[3] == "1":
    try:
        mqttClient = MQTTClient("NSP", MQTT_BROKER, 1883, MQTT_USERNAME, MQTT_PW, keepalive=60)
        mqttClient.connect()
        oled.fill(0)
        oled.text("MQTT verbunden", 0, 60, 1)
        oled.show()
        time.sleep(2)
    except:
        oled.fill(0)
        oled.text("MQTT-Verbindung", 0, 50, 1)
        oled.text("fehlgeschlagen", 0, 70, 1)
        oled.show()
        time.sleep(2)
else:
    pass
